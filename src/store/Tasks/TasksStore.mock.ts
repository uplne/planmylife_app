import dayjs from "dayjs";

import { TaskType } from "../../store/Tasks";
import { StatusTypes, TasksTypes } from "../../types/status";
import { SchedulerType, SchedulerPeriod } from "../TaskScheduler";

export const mockedTaskDataDefault: TaskType[] = [
  {
    id: "id_default_1",
    taskId: "task_1",
    userId: "user1",
    type: TasksTypes.DEFAULT,
    status: StatusTypes.ACTIVE,
    title: "Title 1",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-12").format(),
    assignedTimestamp: dayjs("2023-01-12").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: null,
    repeatPeriod: null,
    repeatTimes: null,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_default_2",
    taskId: "task_2",
    userId: "user1",
    type: TasksTypes.DEFAULT,
    status: StatusTypes.ACTIVE,
    title: "Title 2",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: null,
    repeatPeriod: null,
    repeatTimes: null,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_default_3",
    taskId: "task_3",
    userId: "user1",
    type: TasksTypes.DEFAULT,
    status: StatusTypes.COMPLETED,
    title: "Title 3 - completed",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: null,
    repeatPeriod: null,
    repeatTimes: null,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
];

export const mockedTasksDataDefaultCompleted: TaskType[] = [
  {
    id: "id_default_completed_1",
    taskId: "task_1",
    userId: "user1",
    type: TasksTypes.DEFAULT,
    status: StatusTypes.COMPLETED,
    title: "Title 1",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: null,
    repeatPeriod: null,
    repeatTimes: null,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_default_completed_2",
    taskId: "task_2",
    userId: "user1",
    type: TasksTypes.DEFAULT,
    status: StatusTypes.COMPLETED,
    title: "Title 2",
    created: dayjs("2023-01-13").format(),
    createdTimestamp: dayjs("2023-01-13").format(),
    updated: null,
    assigned: dayjs("2023-01-13").format(),
    assignedTimestamp: dayjs("2023-01-13").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: null,
    repeatPeriod: null,
    repeatTimes: null,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
];

export const mockedTaskDataRecurring: TaskType[] = [
  {
    id: "id_recurring_1",
    taskId: "task_recurring_1",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 1",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-12").format(),
    assignedTimestamp: dayjs("2023-01-12").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.week,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_2",
    taskId: "task_recurring_2",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 2",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_3",
    taskId: "task_recurring_3",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 3",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.no,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_4",
    taskId: "task_recurring_4",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.COMPLETED,
    title: "Title Recurring 4",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_5",
    taskId: "task_recurring_5",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 5 - repeatCompletedForWeeks",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 1,
    repeatCompletedForWeeks: [dayjs("2023-01-11").format()],
    removedForWeek: [],
  },
];

export const mockedTaskDataRecurringYearly = [
  {
    id: "id_recurring_yearly_1",
    taskId: "task_recurring_yearly_1",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 1 - YEAR",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.year,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
];

export const mockedTaskDataRecurringMonthly = [
  {
    id: "id_recurring_monthly_1",
    taskId: "task_recurring_monthly_1",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 1 - MONTHLY",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_monthly_2",
    taskId: "task_recurring_monthly_2",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 2 - every 2 months",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.month,
    repeatTimes: 2,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
];

export const mockedTaskDataRecurringWeekly = [
  {
    id: "id_recurring_weekly_1",
    taskId: "task_recurring_weekly_1",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 1 - WEEKLY",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.week,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_weekly_2",
    taskId: "task_recurring_weekly_2",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 2 - every 2 weeks",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.week,
    repeatTimes: 2,
    repeatCompletedForWeeks: [],
    removedForWeek: [],
  },
  {
    id: "id_recurring_weekly_3",
    taskId: "task_recurring_weekly_3",
    userId: "user1",
    type: TasksTypes.RECURRING,
    status: StatusTypes.ACTIVE,
    title: "Title Recurring 3 - completed for week 1",
    created: dayjs("2023-01-11").format(),
    createdTimestamp: dayjs("2023-01-11").format(),
    updated: null,
    assigned: dayjs("2023-01-11").format(),
    assignedTimestamp: dayjs("2023-01-11").format(),
    completed: null,
    moved: [],
    schedule: null,
    repeatType: SchedulerType.every,
    repeatPeriod: SchedulerPeriod.week,
    repeatTimes: 1,
    repeatCompletedForWeeks: [],
    removedForWeek: [dayjs("2023-01-11").format()],
  },
];
